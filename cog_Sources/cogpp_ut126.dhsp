SetModuleInfo('$Id: cogpp_ut126.dhsp 10572 2016-12-08 08:25:54Z admin $')
;>xdiva
;*
;*		Objet : Consultation des amortissements
;*

;*
;*		Log	Version		N° modif		Date			Modifications
;*		--------------------------------------------------------------------------------------------------------------
;*		YLEF	P205a			Init			01/2015		DAVFIN_FE004
;*

;*
;*		Procédures / Fonctions				Commentaires
;*		--------------------------------------------------------------------------------------------------------------
;*		InitialiserVariables					Initialisation des variables			
;*		Boucle_Principale						Affichage des tableaux et gestion des points d'arret
;*		Cog_UT126_ExportExcel


;*
;*		Déclarations
;*	

;
Include 	"GTTCZ00.dhsp"					; Déclarations communes
Include	"COGTC_YOFFICE.DHSP"
Include	"COGTC_MOTEURPRJSPEC.DHSP"

;
Module	"Cogtm_000.dhop"																;module de fonctions communes
Module	"Yoffice.dhop"

; Record Sql 
Public RecordSQL	"COGRS_UTTAB.DHOQ"	CogRs_UT125
Public RecordSQL	"COGRS_UTTAB.DHOQ"	CogRs_UT126

;
Public Record		"gtfdd.dhsd"			xq				XQ_COG		;enregistrement de travail
Public Record		"COGFDD.DHSD"		  	COG_UT125
Public Record		"COGFDD.DHSD"		  	COG_UT125	UT125_SEL
Public Record		"COGFDD.DHSD"		  	COG_UT125	COG_UT125_Prec
Public Record		"COGFDD.DHSD"			COG_UT126

		 record		"ddsys.dhsd"			columninfo	columninfo_ut125
		 record		"ddsys.dhsd"			scrollbar	scrollbar_ut125
public record		"ddsys.dhsd" 	 		rowinfo		rowinfo_ut125

		 record		"ddsys.dhsd"			columninfo	columninfo_ut126
		 record		"ddsys.dhsd"			scrollbar	scrollbar_ut126
Public Record 		"ddsys.dhsd" 			rowinfo 		rowUT126

; Variables
1	lId_Tab125		L
1	lId_Tab126		L
1  id_toolbar		L						;ident barre d'outils
1  id_menu			L						;ident menu

1	AdrProc			16						;adresse des procédures appelées dans le module associé
1	erreur			x		= false		;détermine s'il y a eu des erreurs lors de l'exécution du programme

1	pilote			1,0	= false

;*
;	Procédures / Fonctions générale
;*

;*
Procedure Cog_UT126_ExportExcel
; Export de l'échéancier sur tableur Excel
Record	"cogfdd.dhsd"		COG_UT126		wUT_Prec
1		wRead126		L
1		wLig			8,0
1		i				2,0
1		j				3,0
1		wCouleur		2,0 = COULEUR_EXCEL_GRISCLAIR		
BeginP

	; Ouverture module office
	If Office_Begin <> 0
		MessageBox("Echec à l'ouverture du module Office.", "Erreur", MB_ICONERROR)
		PReturn
	EndIf

	If Office_OpenCalc() = 0

		; Ligne d'entête
		wLig = 1
		Office_Write(wLig,1,"AFFAIRE")				;| Office_ColumnWidth(2, 1, 10)
		Office_Write(wLig,2,"REFERENCE")				;| Office_ColumnWidth(2, 2, 20)
		Office_Write(wLig,3,"LIGNE")					;| Office_ColumnWidth(2, 3, 20)
		Office_Write(wLig,4,"ANNEE")					;| Office_ColumnWidth(2, 4, 60)
		Office_Write(wLig,5,"DATE DEBUT")			;| Office_ColumnWidth(2, 5, 40)
		Office_Write(wLig,6,"DATE FIN")
		Office_Write(wLig,7,"BASE")
		Office_Write(wLig,8,"DOTATION ANTERIEURE")
		Office_Write(wLig,9,"DOTATION ANNUELLE")
		Office_Write(wLig,10,"BASE FRAIS")
		Office_Write(wLig,11,"DOTATION ANNUELLE FRAIS")
		Office_Write(wLig,12,"DOTATION ANNUELLE FRAIS NON IMMO")
		Office_Write(wLig,13,"DOTATION JANVIER")
		Office_Write(wLig,14,"FRAIS JANVIER")
		Office_Write(wLig,15,"FRAIS NON IMMO JANVIER")
		Office_Write(wLig,16,"DOTATION FEVRIER")
		Office_Write(wLig,17,"FRAIS FEVRIER")
		Office_Write(wLig,18,"FRAIS NON IMMO ")
		Office_Write(wLig,19,"DOTATION MARS")
		Office_Write(wLig,20,"FRAIS MARS")
		Office_Write(wLig,21,"FRAIS NON IMMO ")
		Office_Write(wLig,22,"DOTATION AVRIL")
		Office_Write(wLig,23,"FRAIS AVRIL")
		Office_Write(wLig,24,"FRAIS NON IMMO ")
		Office_Write(wLig,25,"DOTATION MAI")
		Office_Write(wLig,26,"FRAIS MAI")
		Office_Write(wLig,27,"FRAIS NON IMMO ")
		Office_Write(wLig,28,"DOTATION JUIN")
		Office_Write(wLig,29,"FRAIS JUIN")
		Office_Write(wLig,30,"FRAIS NON IMMO ")
		Office_Write(wLig,31,"DOTATION JUILLET")
		Office_Write(wLig,32,"FRAIS JUILLET")
		Office_Write(wLig,33,"FRAIS NON IMMO ")
		Office_Write(wLig,34,"DOTATION AOUT")
		Office_Write(wLig,35,"FRAIS AOUT")
		Office_Write(wLig,36,"FRAIS NON IMMO ")
		Office_Write(wLig,37,"DOTATION SEPTEMBRE")
		Office_Write(wLig,38,"FRAIS SEPTEMBRE")
		Office_Write(wLig,39,"FRAIS NON IMMO ")
		Office_Write(wLig,40,"DOTATION OCTOBRE")
		Office_Write(wLig,41,"FRAIS OCTOBRE")
		Office_Write(wLig,42,"FRAIS NON IMMO ")
		Office_Write(wLig,43,"DOTATION NOVEMBRE")
		Office_Write(wLig,44,"FRAIS NOVEMBRE")
		Office_Write(wLig,45,"FRAIS NON IMMO ")
		Office_Write(wLig,46,"DOTATION DECEMBRE")
		Office_Write(wLig,47,"FRAIS DECEMBRE")
		Office_Write(wLig,48,"FRAIS NON IMMO ")
		For i=1 to 48
			Office_InteriorColorIndex(wLig,i,COULEUR_EXCEL_JAUNEFONCE)		
			Office_FontBold(wLig,i)
		next
			  

		; Tableau d'amortissement
		CogRs_UT126.Init()
		CogRs_UT126.Where.RemoveCondition("")
		wRead126 = CogRs_UT126.ReaderOpen()
		If UT125_SEL.Affaire <> ' '
			CogRs_UT126.Where.Equal_Affaire(COG_UT125.Affaire)
			CogRs_UT126.Where.AddCondition("Equal_Affaire")
		EndIf
		If UT125_SEL.Ref <> ' '
			CogRs_UT126.Where.Equal_Ref(COG_UT125.Ref)
			CogRs_UT126.Where.AddCondition("Equal_Ref")
		EndIf
		If UT125_SEL.Cog_LgNo > 0
			CogRs_UT126.Where.Equal_LgNo(COG_UT125.Cog_LgNo)
			CogRs_UT126.Where.AddCondition("Equal_LgNo")
		EndIf
		CogRs_UT126.Where.Not_Equal_Etat(C_UT126_STATUT_ANNULE)
		CogRs_UT126.Where.AddCondition("Not_Equal_Etat")
		CogRs_UT126.OrderBy.Par_PK()
		CogRs_UT126.ReaderSelect(wRead126)
	
		Do While CogRs_UT126.ReaderNext(wRead126) > 0
	
			wLig++

			Office_Write(wLig,1, CogRs_UT126.Affaire)				
			Office_Write(wLig,2, CogRs_UT126.Ref)					
			Office_Write(wLig,3, CogRs_UT126.Cog_LgNo)				
			Office_Write(wLig,4, CogRs_UT126.Annee)					
			Office_Write(wLig,5, SDate(CogRs_UT126.DDt))			
			Office_Write(wLig,6, SDate(CogRs_UT126.FDt))
			Office_Write(wLig,7, CogRs_UT126.Cog_BaseMt)
			Office_Write(wLig,8, CogRs_UT126.AntMt)
			Office_Write(wLig,9, CogRs_UT126.AnMt)
			Office_Write(wLig,10,CogRs_UT126.FraisBaseMt)
			Office_Write(wLig,11,CogRs_UT126.FraisAnMt)
			Office_Write(wLig,12,CogRs_UT126.FraisFaAnMt)
			
			; dotations mensuelles
			j=13
			For i=1 to 12
				Office_Write(wLig, j, CogRs_UT126.MoisMt(i))
				j += 3
			next
	
			; frais financiers
			j=14
			For i=1 to 12
				Office_Write(wLig, j, CogRs_UT126.FraisMoisMt(i))
				j += 3
			next

			; frais financiers non immo
			j=15
			For i=1 to 12
				Office_Write(wLig, j, CogRs_UT126.FraisFaMoisMt(i))
				j += 3
			next

			;
			If CogRs_UT126.Affaire <> wUT_Prec.Affaire OR CogRs_UT126.Ref <> wUT_Prec.Ref OR CogRs_UT126.Cog_LgNo <> wUT_Prec.Cog_LgNo
				wCouleur = Condition(wCouleur = COULEUR_EXCEL_GRISCLAIR, COULEUR_EXCEL_TURQUOISEPALE, COULEUR_EXCEL_GRISCLAIR)
			EndIf
			For i=1 to 48
				Office_InteriorColorIndex(wLig,i, wCouleur)		
			next

			; Sauvegarde élément précédent
			wUT_Prec = CogRs_UT126.COG_UT126
	
		WEnd

		CogRs_UT126.ReaderClose(wRead126)

	Else ; Echec de Office_OpenCalc
		MessageBox("Echec à l'ouverture du classeur Excel.", "Erreur", MB_ICONERROR)
	EndIf

	Office_End

EndP

;* Initialisation des variables
function int Cog_InitialiserVariables
recordsql	a5rsdos.dhoq	utilisateur						;Utilisateurs

beginf

	if pingreceive("zechange",mz) <> 0

		;le programme n'a pas été lancé à partir du menu, on recherche l'utilisateur
		utilisateur.init()
		utilisateur.where.exists(system.User)
		if utilisateur.select() = 0

			MessageBox("Utilisateur "&left(system.user)&" non défini dans la base Divalto","Alerte",mb_iconexclamation)

			freturn(false)

		else

			mz.dos		= utilisateur.dos
			mz.etb		= utilisateur.etb
			mz.depo		= utilisateur.depo
			mz.mecle		= "Cogee_ut126.dhof"
			mz.titre2	= "Echéancier de facturation"

		endif

	endif

	;commentaire du programme
	ProgramSetComment("Echéancier de facturation")

	;recherche du dossier et T000
	seek_soc(mz.dos)

	;chargement du masque écran
	xmeload mz.mecle
	xmetitle(mz.titre2)
	XmeInfoPage(mz.mecle,1)						;lire la taille de la page
	XmeSetWindowSize(mz.mecle,1,Harmony.Opara3,Harmony.Opara4)

	;chargement des barres d'outils
	id_toolbar = XmeToolbarGetId (mz.mecle,"MAIN")
	XmeToolbarSetWindow (id_toolbar,mz.mecle,1)

	;chargement du menu
	id_menu = XmeMenuGetId (mz.mecle,"MAIN")
	XmeMenuSetWindow (id_menu,mz.mecle,1)

	;initialisation du tableau des biens
	lId_Tab125						= XmeListGetId(MZ.mecle,1,"SELECTION", COG_UT125)
	init rowinfo_ut125			= $00
	rowinfo_ut125					= ""
	rowinfo_ut125.Bitmap 		= 1
	rowinfo_ut125.Selection		= false

	;initialisation du tableau des amortissements
	lId_Tab126					= XmeListGetId(MZ.mecle,1,"AMORTISSEMENT", COG_UT126)
	init rowut126				= $00
	rowUT126						= ""
	rowUT126.Bitmap 			= 1
	rowUT126.Selection		= false

	;
	If PingReceiveAndDelete("COG_UT125", UT125_SEL) = 0
		pilote = TRUE
		XmeSetAttribut("pilote", AN_VISIBILITE, AV_GRISE)
	EndIf

	;
	XmeToolbarEnableButton(id_toolbar , 'cog_btnexcel', FALSE)

	freturn(true)

endf


;*	Mise à jour des boutons (affichage, grisés, ...)
Public Procedure Raffraichir
; met à jour le menu et les boutons
BeginP

	XmeToolbarEnableButton(id_toolbar , 'cog_btnexcel', Condition(ListCount(lId_Tab125) > 0, TRUE, FALSE))

	xmedispv(MZ.MeCle,1,XME_MODE_GOTO)
	XmeListDisplay(lId_Tab125)
	XmeListScrollBarInit(lId_Tab125,scrollbar_ut125)
	XmeListDisplay(lId_Tab126)
	XmeListScrollBarInit(lId_Tab126,scrollbar_ut126)	

EndP

;*	Recherches complémentaires
public procedure RechercherLibelle
beginp

endp

;*
procedure Cog_FinProgramme
beginp

	
	programexit

endp

;*
procedure Cog_AfficherTraitement
beginp

	;test d'abandon du programme en cours de traitement
	if getchar()=$E8 and messagebox("Abandon du traitement en cours ?","Confirmation",mb_iconquestion+mb_yesno)=idyes
		Cog_EcritureLivreDeBord("Abandon utilisateur")
		Cog_FinProgramme
	endif

	xmedispv mz.mecle 3 xme_mode_gosub
	xmeret
	xmedispv mz.mecle 4 xme_mode_gosub
	xmeret

endp

;*
function int Cog_FiltresOk
beginf

	freturn(true)

endf


;*
;	Traitements
;*

;*
Procedure Charger_UT126_ListeEcheanciers
;
Record	"ccfdd.dhsd"		I1		wI1
1		i				2,0
1		wLgNo			9,0	= 0
1		wRead126		L
1		SimDDt		>gtfdd.dhsd		PiDt
BeginP

	; informations complémentaires UT125
	CogRs_UT125.init()
	CogRs_UT125.Where.RemoveCondition("")
	CogRs_UT125.Where.PK(COG_UT125.Affaire, COG_UT125.Ref, COG_UT125.Cog_LgNo)
	CogRs_UT125.Select()
	COG_UT125 = CogRs_UT125.COG_UT125

	; Tableau d'amortissement
	XmeListErase(lId_Tab126)

	CogRs_UT126.Init()
	CogRs_UT126.Where.RemoveCondition("")
	wRead126 = CogRs_UT126.ReaderOpen()
	CogRs_UT126.Where.Equal_Affaire(COG_UT125.Affaire)
	CogRs_UT126.Where.AddCondition("Equal_Affaire")
	CogRs_UT126.Where.Equal_Ref(COG_UT125.Ref)
	CogRs_UT126.Where.AddCondition("Equal_Ref")
	CogRs_UT126.Where.Equal_LgNo(COG_UT125.Cog_LgNo)
	CogRs_UT126.Where.AddCondition("Equal_LgNo")
	CogRs_UT126.ReaderSelect(wRead126)

	Do While CogRs_UT126.ReaderNext(wRead126) > 0

		wLgNo++
		init rowUT126 		= ' '
		COG_UT126 			= CogRs_UT126.COG_UT126
		rowUT126.Nomligne	= "Ligne" & wLgNo
		XmeListInsert(lId_Tab126, COG_UT126)

		For i = 1 to 12
			XmeListSetAttribut(rowUT126.Nomligne, "dot" & nospaces(i), AN_STYLE, Condition(COG_UT126.CeFaTb(i)=2, "TABLEAU_PROP_2", "TABLEAU_SAISI"))
		Next

	WEnd

	CogRs_UT126.ReaderClose(wRead126)
	 

	;
	XmeListFirst(lId_Tab126, COG_UT126)
	COG_UT125_Prec = COG_UT125

EndP

;*
procedure Charger_UT125_ListeCotisations
;
1		wRead125		L
BeginP

	XmeListErase(lId_Tab125)
	XmeListErase(lId_Tab126)

	CogRs_UT125.Init()
	CogRs_UT125.Where.RemoveCondition("")
	wRead125 = CogRs_UT125.ReaderOpen()
	If UT125_SEL.Affaire <> ' '
		CogRs_UT125.Where.Equal_Affaire(UT125_SEL.Affaire)
		CogRs_UT125.Where.AddCondition("Equal_Affaire")
	EndIF
	If UT125_SEL.Ref <> ' '
		CogRs_UT125.Where.Equal_Ref(UT125_SEL.Ref)
		CogRs_UT125.Where.AddCondition("Equal_Ref")
	EndIF
	If UT125_SEL.Cog_LgNo > 0
		CogRs_UT125.Where.Equal_LgNo(UT125_SEL.Cog_LgNo)
		CogRs_UT125.Where.AddCondition("Equal_LgNo")
	EndIf
	CogRs_UT125.ReaderSelect(wRead125)

	Do While CogRs_UT125.ReaderNext(wRead125) > 0

		Init COG_UT125		= ' '
		COG_UT125 			= CogRs_UT125.COG_UT125

		XmeListInsert(lId_Tab125, COG_UT125)

	WEnd

	CogRs_UT125.ReaderClose(wRead125)

	;
	XmeListFirst(lId_Tab125, COG_UT125)

EndP



;*
;	Saisie des pages du masque
;*

;* Saisie du masque page 1
public procedure Boucle_Principale
; Navigation entre les tableaux
; gestion des points d'arret
1 	fin		1,0	= 0
1	focus		4,0	= 0

beginp

	If not pilote
		xmeinput(mz.mecle, 1 , 0, XME_MODE_GOTO)
	Else
		XmeDispV(MZ.MeCle, 1, XME_MODE_GOTO)
		focus = 1000
		Charger_UT125_ListeCotisations
		Charger_UT126_ListeEcheanciers
		Raffraichir
		XmeListConsult(lId_Tab125) 
	EndIf

	do
	   
      ;focus = 0                       
		switch harmony.key            ;tests des causes de l'interruption
	
			Case Harmony.Dataarret 	= 500
				Charger_UT125_ListeCotisations
				Charger_UT126_ListeEcheanciers
				Raffraichir
				focus = 1000

			Case Harmony.Dataarret	= 1000
				focus = 1000
				XmeListConsultDefault(lId_Tab125, COG_UT125, scrollbar_ut125, zoom_privilege_consultation) 
		
	
			Case Harmony.Dataarret	= 1001
				focus = 1001
				XmeListConsultDefault(lId_Tab126, COG_UT126, scrollbar_ut126, zoom_privilege_consultation) 

			Case Harmony.Dataarret	= 1002
				Cog_UT126_ExportExcel

			case harmony.dataarret = 8002
				if Harmony.Sourisbout = Right_Button
					Zoom_Call()
				elsif Harmony.Sourisclic = Double_Click
					Harmony.Retour = Xmenext_Simulation_Touche
					Harmony.Cplretour = k_f8
				endif
			
			case k_f7                ;zoom généralisé
				Zoom_Call()
			
			case k_f8                ;zooms
				Zoom_Call(harmony.arret)
		
			case vsw IN (k_f9, K_f12)                ;abandon
				fin = 1

			Default
				If Harmony.SourisSeq
					focus = 0 
					Harmony.Retour    = xmenext_point_sequence 
					Harmony.cplRetour = Harmony.sourisSeq
				elsif focus = 1000
					XmeListConsultDefault(lId_Tab125, COG_UT125, scrollbar_ut125, zoom_privilege_consultation)
				elsif focus = 1001 
					XmeListConsultDefault(lId_Tab126, COG_UT126, scrollbar_ut126, zoom_privilege_consultation)  
				Endif

		endswitch

		If COG_UT125_Prec.Affaire <> COG_UT125.Affaire OR COG_UT125_Prec.Ref <> COG_UT125.Ref \
			OR COG_UT125_Prec.Cog_LgNo <> COG_UT125.Cog_LgNo

			Charger_UT126_ListeEcheanciers
			Raffraichir

		EndIf

	while fin = 0         ;suite de la saisie
		Switch focus
			Case 1000
				XmeListConsult(lId_Tab125) 

			Case 1001
				XmeListConsult(lId_Tab126) 

			Default
				XmeNext(harmony.retour,harmony.cplretour)
		EndSwitch
	wend
		
endp


;*
;	Programme principal
;*
Main
;	

	if Cog_InitialiserVariables

		Boucle_Principale

	EndIf

	ProgramExit


