
;*
;*	COGESER - Intégration des écritures comptables depuis Excel
;*

;*		Log	 Version	  N°modIf		Date		Modifications
;*
;*		BK		7.2							10/2014	Version initial
;*		YLEF		P205a						03/2015	Adaptation U GIE

OverWrittenBy "COGuCC_TT_IMPORT_ECRITURES.DHOP"

;
Include	CCTC000.DHSP

;
Module	cogpm_ole.dhop
Module	'YOFFICE.dhop'
Module	'GTPMFIC.DHOP'

;	Hfile
Public HTmpFile	CCFDD.DHSD	CCFM			CCFM_DEV_01	DeleteOnExit	; Fichier d'intégration

;	Record
Public Record	CCFDD.DHSD		C8				C8			; Ecritures
Public Record	CCFDD.DHSD		CX				CX			; Ventilation sur les axes
Public Record	CCFDD.DHSD		C4				C4		
Public Record	gtfdd.DHSD		cli			cli	
Public Record	DDSYS.DHSD		RecordInfo	RecordInfo_DEV_C8		; Infos enregistrement table C8
Public Record	DDSYS.DHSD		DataInfo		DataInfo_DEV_C8		; Informations donnée pour la table C8

;	RecordSql
Recordsql 	cog_ccrsjca.dhoq		CogRs_C4		CogRs_Journal		
RecordSql	cog_ccrsjca.dhoq		CogRs_C3		CogRs_Compte_w1

;	Variables
1	g_IndTabChamp		3,0			; Indice du tableau des champs de la table
1	g_TabChamp			37376			; Tableau contenant les inforamtions relatives aux champs de la table
	2	g_TabChamp_NumColonne		3,0*256 	; Numéro de la colonne sous Excel
	2	g_TabChamp_NomColonne		50*256 	; Nom du champ dans le dictionnaire et sous Excel
	2	g_TabChamp_C8					1,0*256	; Champ présent dans la table C8 (1 Non - 2 Oui)
	2	g_TabChamp_DataOffSet_C8	5,0*256	; (pointeur) Offset dans l'enreg	C8 (position début)
	2	g_TabChamp_TailleTot_C8		5,0*256	; (pointeur) Taille totale dans C8 (position fin)
	2	g_TabChamp_TailleElem_C8	5,0*256	; (pointeur) Taille d'un élément dans l'enreg C8
	2	g_TabChamp_DataNat_C8		5,0*256	; (pointeur) Nature dans l'enreg C8
	2	g_TabChamp_NbDim_C8			5,0*256	; (pointeur) Nombre de dimensions dans l'enreg C8
	2	g_TabChamp_Dim_C8				5,0*256	; Dimension	(indice du tableau) dans l'enreg C8

1	g_NumLigneExcel				14,0 = 5	; Première ligne lue sous Excel
1	g_Serveur						50			; Serveur DDE
1	g_Topic							50			; Objet destinataire (system,feuille)
1	g_IdServ							X			; Excel
1	g_IdServF						X			; Feuille du classeur
1	g_EnregistrementGenerique_C8	1500	; Enregistrement générique	pour l'enregistrement C8
1	x_st_00							X			; Pointeur	
1	ClnDbt							3,0			
1	ClnCrdt							3,0	
1	ClnAX1							3,0	
1	ClnAX2							3,0	
1	ClnAX3							3,0	
1	ClnAX4							3,0
1	AXE1								8
1	AXE2								8
1	AXE3								8
1	AXE4								8
			
1	PieceDr			>ccfdd.dhsd		Piece	
1	NPieceDRExcel	>ccfdd.dhsd		Piece	
1	NPieceExcel		>ccfdd.dhsd		Piece		
1	Feuilencours	256	

;*	03
Function int COGF_Elimine_Parenthese(&p_Text, &p_IndTab)
; Fonction qui retire les carectères entre les parenthèses incluses à un champ de type tableau
; Retourne l'indice du tableau
1 p_Text		255
1 p_IndTab 	3,0

1 t_Car		1
1 i			x
1 t_Debut	3,0
1 t_Fin		3,0
BeginF	
	t_Debut	= String("(" , p_Text)
	t_Fin		= String(")" , p_Text)
	If t_Debut <> 0 And t_Fin <> 0		
		p_IndTab	= NMid(p_Text ,t_Debut, t_Fin-t_Debut , 0)
		p_Text	= FString(FString("A","D(" & t_Debut & "," & t_Fin & ")"), p_Text)		
	EndIf
	FReturn(0)

EndF

;*	02
Function Int COGF_Analyse_PremiereLigne(p_Nom_Dico)
1  p_Nom_Dico     25

1	t_Colonne		3,0	; Numéro de la colonne
1	t_Item			255	; Nom de la cellule
1	t_Valeur			255	; Contenu de la cellule

1	t_IndTab			3,0	; Indice d'un champ tableau
1	t_PosPoint		3,0	; Position du point dans le nom du champ
1  t_Nom_Enrrec   50		; Nom du champ

1	x_st_01			X		; Pointeur
BeginF
   ; Lecture des colonnes du fichier Excel
	For t_Colonne = 1 to 256
      ; Initialisation
      ; Récupération de la donnée
		t_Valeur = Cog_OLE_LireCelluleAt(1,t_Colonne) 
		If t_Valeur = " " 
			redofor
		EndIf			
      ; Si différent de la dernière colonne
		If t_Valeur not in ("*FIN*","DEBIT","CREDIT","AXE1","AXE2","AXE3","AXE4")  
			; Retrait des parenthèses
			t_IndTab = 0
			COGF_Elimine_Parenthese(t_Valeur, t_IndTab)			
         ; Mise en majuscule
			t_Valeur = FString("U",t_Valeur)
         ; Recherche du nom de la table et du nom du champ 
			t_Nom_Enrrec	= " "
         t_PosPoint = String(".",t_Valeur,1)  
         If t_PosPoint <> 0
				t_Nom_Enrrec	= Mid(t_Valeur, t_PosPoint+1)
         Else
				t_Nom_Enrrec	= Left(t_Valeur)
         EndIf
			; Lecture de la définition de la table et du champ	pour l'enregistrement C8
			Init RecordInfo_DEV_C8 = " "
			Init DataInfo_DEV_C8 = " "
			If DDGetRecord3(p_Nom_Dico, "C8", RecordInfo_DEV_C8) <> 0
		      Display DDGetTextError3 
			Else
				Do
					x_st_01 = DDNextData3(DataInfo_DEV_C8)
				While x_st_01 = 0
					If t_Nom_Enrrec = DataInfo_DEV_C8.MNemo
						ExitDo
					EndIf	
				Wend
				If t_Nom_Enrrec <> DataInfo_DEV_C8.MNemo
					Init RecordInfo_DEV_C8 = " "
					Init DataInfo_DEV_C8 = " "
				EndIf
			EndIf
			; Sauvegarde de la colonne
         g_IndTabChamp = g_IndTabChamp + 1  
			g_TabChamp_NumColonne(g_IndTabChamp)	= t_Colonne							; Numéro de la colonne
         g_TabChamp_NomColonne(g_IndTabChamp)	= FString("U",t_Nom_Enrrec)	; Nom du champ
 			If DataInfo_DEV_C8 <> " "
				g_TabChamp_C8(g_IndTabChamp)					= 2									; Champ présent dans la table C8
				g_TabChamp_DataOffSet_C8(g_IndTabChamp)	= DataInfo_DEV_C8.DataOffSet	; Offset dans l'enreg
	         g_TabChamp_TailleTot_C8(g_IndTabChamp)		= DataInfo_DEV_C8.TailleTot	; Taille totale
	         g_TabChamp_TailleElem_C8(g_IndTabChamp)	= DataInfo_DEV_C8.TailleElem	; Taille d'un élément
	         g_TabChamp_DataNat_C8(g_IndTabChamp)		= DataInfo_DEV_C8.DataNat		; Nature
		      g_TabChamp_NbDim_C8(g_IndTabChamp)			= DataInfo_DEV_C8.NbDim			; Nombre de dimensions
				g_TabChamp_Dim_C8(g_IndTabChamp)				= t_IndTab							; Dimension
 			Else
				g_TabChamp_C8(g_IndTabChamp)					= 1									; Champ présent dans la table C8
				g_TabChamp_DataOffSet_C8(g_IndTabChamp)	= " "									; Offset dans l'enreg
	         g_TabChamp_TailleTot_C8(g_IndTabChamp)		= " "									; Taille totale
	         g_TabChamp_TailleElem_C8(g_IndTabChamp)	= " "									; Taille d'un élément
	         g_TabChamp_DataNat_C8(g_IndTabChamp)		= " "									; Nature
		      g_TabChamp_NbDim_C8(g_IndTabChamp)			= " "									; Nombre de dimensions
				g_TabChamp_Dim_C8(g_IndTabChamp)				= " "									; Dimension
			EndIf
		Elsif t_Valeur = "DEBIT"
			ClnDbt  = t_Colonne
		Elsif t_Valeur = "CREDIT"
			ClnCrdt = t_Colonne	
		Elsif t_Valeur = "AXE1"
			ClnAX1 = t_Colonne 
		Elsif t_Valeur = "AXE2"
			ClnAX2 = t_Colonne 
		Elsif t_Valeur = "AXE3"
			ClnAX3 = t_Colonne 
		Elsif t_Valeur = "AXE4"
			ClnAX4 = t_Colonne 
		Else
         ; Colonne fin : t_Valeur = "*FIN*"
			ExitFor
      EndIf
   Next
   FReturn(0)
EndF
;*
Public Procedure Cog_reserve_C4
;
Beginp
	CogRs_Journal.Hshare("PIECE",'R')   	 
EndP
;*
Public Procedure Cog_Libere_C4
;
Beginp
	CogRs_Journal.Hshare("PIECE",'P')   
EndP
;*
Public Procedure Cog_Recherche_Journal(Dos,JNL,Piece,Mode) 
;
1	JNL 			>ccfdd.dhsd	JNL
1	Dos 			>ccfdd.dhsd	Dos
1	Piece			>ccfdd.dhsd	Piece
1	Mode			1
;
BeginP

	CogRs_Journal.Init()
	CogRs_Journal.Where.Zoom_Dos(Dos)
	CogRs_Journal.Where.AddCondition('Zoom_Dos')
	CogRs_Journal.Where.Zoom_PK(JNL)
	CogRs_Journal.Where.AddCondition('Zoom_PK')

	If CogRs_Journal.Select() = 1
		If Mode = 'M'
			CogRs_Journal.Piece = Piece 
			CogRs_Journal.Update()
		EndIf
	Endif

EndP

;*
Public function char Cog_Recherche_Cpt(wDos,wCPT)
;
1	wCPT 			>ccfdd.dhsd	CPT
1	wDos 			>ccfdd.dhsd	Dos
1	wRet 			>gtfdd.dhsd	Regl
;
BeginF

	PingLocal("MZDOS_LOC", Mz.Dos)
	Mz.Dos = wDos

	CogRs_Compte_w1.Init()
	CogRs_Compte_w1.Where.Equal_Cpt(wCPT)
	CogRs_Compte_w1.Where.AddCondition('Equal_Cpt')

	If CogRs_Compte_w1.Select() = 1
		wRet = CogRs_Compte_w1.Reg
	Endif

	PingLocalReceiveAndDelete("MZDOS_LOC", Mz.Dos)

	freturn(wRet)

EndF

;*
Public function int Cog_Affecter_NDrPiece(Dos,JNL,NPExcel,NPDRExcel,PDr)
;
1	JNL 			>ccfdd.dhsd	JNL
1	Dos 			>ccfdd.dhsd	Dos
1	NPExcel 		>ccfdd.dhsd	Piece
1	NPDRExcel 	>ccfdd.dhsd	Piece
1	PDr		 	>ccfdd.dhsd	Piece
1	Ret 			>ccfdd.dhsd	Piece
;
BeginF

	If NPDRExcel <> NPExcel

		CogRs_Journal.Init()
		CogRs_Journal.Where.Zoom_Dos(Dos)
		CogRs_Journal.Where.AddCondition('Zoom_Dos')
		CogRs_Journal.Where.Zoom_PK(JNL)
		CogRs_Journal.Where.AddCondition('Zoom_PK')
	
		If CogRs_Journal.Select() = 1
			Ret = CogRs_Journal.Piece+1 
		Endif

	Else
		Ret = PDr 
	EndIf

	freturn(Ret)

EndF
;*	01
Public Function int COGF_Import_CCFM
1	t_Item			255			; Nom de la cellule
1	t_Valeur			255			; Contenu de la cellule

1	x_st_01			X				; Pointeur
1	i					3,0 = 0		; Compteur

1	t_ValColonneCE1	1 = " "	; Type de ligne

1  CompteurEcr    8,0
1	NVide          3,0
1	Ce5          	>gtfdd.dhsd	Ce5 = '2'
BeginF	
	CompteurEcr = 1
	NVide       = 0
	; Enregistrement des champs (1° ligne d'Excel)
	Init g_TabChamp	= " "
	g_IndTabChamp		= 0
	If COGF_Analyse_PremiereLigne("ccfdd.dhsd") = 0
		; Lecture des données à partir de la ligne "g_NumLigneExcel"
		g_NumLigneExcel   = 1				
		Do

			g_NumLigneExcel = g_NumLigneExcel + 1
			g_EnregistrementGenerique_C8 = " "
			t_Valeur	= " " 
			t_Valeur = Cog_OLE_LireCelluleAt(g_NumLigneExcel,1)

		While NVide < 20 

			If	t_Valeur <> " " 
				NVide = 0
				; Lecture de la ligne Excel
				For i = 1 to g_IndTabChamp; - 1				      			
					t_Valeur	= " "
					t_Valeur = Cog_OLE_LireCelluleAt(g_NumLigneExcel,Left(g_TabChamp_NumColonne(i)))
					
					If g_TabChamp_C8(i) = 2
						If g_TabChamp_Dim_C8(i) > 0 ; Tableau
							If	g_TabChamp_DataNat_C8(i) = 4	; Date
								FDate(Mid(g_EnregistrementGenerique_C8, g_TabChamp_DataOffSet_C8(i) + g_TabChamp_TailleElem_C8(i)*(g_TabChamp_Dim_C8(i) - 1), g_TabChamp_TailleElem_C8(i)), FString("B", t_Valeur))
							Else
								Mid(g_EnregistrementGenerique_C8, g_TabChamp_DataOffSet_C8(i) + g_TabChamp_TailleElem_C8(i)*(g_TabChamp_Dim_C8(i) - 1), g_TabChamp_TailleElem_C8(i)) = FString("B", t_Valeur)
							EndIf
						Else
							If	g_TabChamp_DataNat_C8(i) = 4	; Date
								FDate(Mid(g_EnregistrementGenerique_C8, g_TabChamp_DataOffSet_C8(i), g_TabChamp_TailleTot_C8(i)), FString("B", t_Valeur))
							Else
								Mid(g_EnregistrementGenerique_C8, g_TabChamp_DataOffSet_C8(i), g_TabChamp_TailleTot_C8(i))	= FString("B", t_Valeur)
							EndIf
						EndIf
					EndIf
	
				Next		
											
				; Enregistrement								
				Init C8 = " "
				
				C8 = g_EnregistrementGenerique_C8 
	
				t_Valeur	= " "
				t_Valeur = Cog_OLE_LireCelluleAt(g_NumLigneExcel,ClnCrdt)

				NPieceExcel = c8.Piece
	
				If t_Valeur <> ' '
					c8.Mt 	= t_Valeur
	 				c8.Sens 	= 2
				EndIf
	
				t_Valeur	= " "
				t_Valeur = Cog_OLE_LireCelluleAt(g_NumLigneExcel,ClnDbt)
	
				If t_Valeur <> ' '
					c8.Mt	= t_Valeur
	 				c8.Sens 	= 1
				EndIf
	
				C8.Ce1 			= '8'
				PingReceive("Typecr",C8.Ce2)
				C8.Ce2   		;= Typecr			
				c8.Ce3 			= " "
				c8.Ce4 			= " "
				c8.Ce5 			= " "
				c8.Ce6 			= " "
				c8.Ce7 			= " "
				c8.Ce8 			= " "
				c8.Ce9 			= " "
				c8.Cea 			= " "
				c8.Conf 			= " "
				c8.EcrNo 		= CompteurEcr++
;				c8.EcrLg 		= " "
;				c8.EcrValNo 	= " "
				If C8.CptCol = ' '
					C8.CptCol = C8.Cpt
				EndIf
;				c8.Lett 			= " "
;				c8.Point 		= " "
;				c8.LotCod 		= 1
;				c8.Lot 			= " "
;				c8.ChqNo 		= " "
;				c8.Critere 		= " "
;				c8.RegTyp  		= " "
				c8.UserCrDh 	= Time(7)
;				c8.CeNote 		= " "
;				c8.Note 			= " "
;				c8.MtBis 		= " "
;				c8.Mt2 			= " "
;				c8.LettDt 		= " "
;				c8.PointDt 		= " "
;				c8.Mt2Nat 		= " "
;				c8.BqeDt 		= " "
;				c8.ValDt 		= " "
;				c8.OpeDt 		= " "
				c8.UserCrOri 	= 2
;				c8.SaisCod(*)	= " "
;				c8.PointMt 		= " "
				C8.UserCr		= SYSTEM.User
	
				AXE1 = Cog_OLE_LireCelluleAt(g_NumLigneExcel,ClnAX1)
				AXE2 = Cog_OLE_LireCelluleAt(g_NumLigneExcel,ClnAX2)
				AXE3 = Cog_OLE_LireCelluleAt(g_NumLigneExcel,ClnAX3)
				AXE4 = Cog_OLE_LireCelluleAt(g_NumLigneExcel,ClnAX4)
		
				if C8.Dos = 0
					C8.Dos = Mz.Dos
				Endif

				If C8.Etb = 0
					C8.Etb = Mz.Etb
				EndIf

				Cog_Recherche_Cpt(c8.Dos,c8.Cpt)
	
				If C8.Reg = ' '
					C8.Reg = Cog_Recherche_Cpt(c8.Dos,c8.Cpt)			
				Endif
	
				Cog_Recherche_Journal(C8.Dos,c8.Jnl,PieceDr,'')
	
				If CogRs_Journal.EchSais = 3
					C8.EchDt = ' '	
				EndIf
	
				;	Vérification de montant
				If c8.Mt <> 0
					;	Vérification de n° Piece
					If CogRs_Journal.PieceSais in (2,3) and c8.Piece <> 0 
						x_st_01		= IWrite(CCFM_DEV_01, C8, "P")
						If x_st_01 <> 0
							MessageBox("Erreur lors de l'écriture dans la table C8.", "Erreur d'écriture", MB_OK + MB_ICONEXCLAMATION)
						EndIf
					Elsif CogRs_Journal.PieceSais = 4
						Cog_reserve_C4
						C8.Piece 		= Cog_Affecter_NDrPiece(C8.Dos,c8.Jnl,NPieceExcel,NPieceDRExcel,PieceDr)
						PieceDr 			= C8.Piece

						x_st_01		= IWrite(CCFM_DEV_01, C8, "P")
						If x_st_01 <> 0
							MessageBox("Erreur lors de l'écriture dans la table C8.", "Erreur d'écriture", MB_OK + MB_ICONEXCLAMATION)
						Else
							Cog_Libere_C4
							Cog_Recherche_Journal(C8.Dos,c8.Jnl,PieceDr,'M')
						EndIf
						NPieceDRExcel = NPieceExcel
					Elsif CogRs_Journal.PieceSais = 1
						x_st_01		= IWrite(CCFM_DEV_01, C8, "P")
						If x_st_01 <> 0
							MessageBox("Erreur lors de l'écriture dans la table C8.", "Erreur d'écriture", MB_OK + MB_ICONEXCLAMATION)
						EndIf
					Endif
				Endif	

				If (CogRs_Compte_w1.AxeSais(1) = 2 and AXE1 <> ' ') Or (CogRs_Compte_w1.AxeSais(2) = 2 and AXE2 <> ' ') Or (CogRs_Compte_w1.AxeSais(3) = 2 and AXE3 <> ' ') Or (CogRs_Compte_w1.AxeSais(4) = 2 and AXE4 <> ' ')
					Init CX = " "
					CX.CE1 		= 2
					CX.DOS 		= C8.Dos
					CX.ETB 		= C8.Etb
					CX.ECRNO 	= C8.EcrNo
					CX.MT 		= C8.Mt
					If CogRs_Compte_w1.AxeSais(1) = 2 and AXE1 <> ' '
						CX.AXE(1)	= AXE1
					Endif
					If CogRs_Compte_w1.AxeSais(2) = 2 and AXE2 <> ' '
						CX.AXE(2)	= AXE2
					Endif
					If CogRs_Compte_w1.AxeSais(3) = 2 and AXE3 <> ' '
						CX.AXE(3)	= AXE3
					Endif
					If CogRs_Compte_w1.AxeSais(4) = 2 and AXE4 <> ' '
						CX.AXE(4)	= AXE4
					Endif
					CX.UserCrDh = Time(7)
					CX.UserCr	= SYSTEM.User
					IWrite(CCFM_DEV_01, CX, "P")
				Endif

			Else

				NVide++

			EndIf

		Wend
			; Importation
			x_st_01 = HClose(CCFM_DEV_01)
			x_st_01 = C3_Integration(CCFM_DEV_01.Name,)
			If x_st_01 = True
				MessageBox("Traitement effectué","Import Simplifié des écritures comptables", MB_OK + MB_ICONINFORMATION)
			Else
				MessageBox("Veuillez consulter le livre de bord, des erreurs ont empêchés l'importation des écritures","Import Simplifié des écritures comptables", MB_OK + MB_ICONEXCLAMATION)
			EndIf
	
	EndIf
	
	FReturn(0)

EndF
;*
Function Char Cog_NomFeuil_Excel()
1	Classeur			256
1	Feuille			256
;
BeginF
	Office_SetInterfaceCalc(1)
	Office_Begin
	IsOffice_OpenCalc
	Office_GetActiveSheetAndWorkbookName(Classeur,Feuille)
	Office_End
	freturn(Feuille)	
EndF
;*
;Programme principal
;*	00
Main

	If PingReceive("ZEchange", MZ) = 0
		; Initialisation
		Seek_Soc(MZ.Dos)		; Contrôle du dossier
		Seek_Ets(MZ.Etb)

		Feuilencours = ' '
		Feuilencours = Cog_NomFeuil_Excel

		If Cog_OLE_Ouvrir(Feuilencours)= 0
			; Importation des données
			COGF_Import_CCFM
			Cog_OLE_Fermer()
		Else
			MessageBox("Problème d'ouverture de fichier Excel","Alerte",MB_ICONEXCLAMATION)
	   	ProgramEXIT
		EndIf

	EndIf

	ProgramExit
