SetModuleInfo('$Id: cogtm_moteurprjspec.dhsp 7664 2015-03-11 09:37:45Z admin $')
;>xdiva
;*
;*		Objet : Module de fonctions communes à la facturation des projets spécifiques UT125
;*

;*
;*		Log	Version		N° modif		Date			Modifications
;*		--------------------------------------------------------------------------------------------------------------
;*		YLEF		P204A						01/2015
;*

;*
;*		Procédures / Fonctions				Commentaires
;*		--------------------------------------------------------------------------------------------------------------
;*		Cog_MoteurFacturationPrjSpe_RES
;*		Cog_MoteurFacturationPrjSpe_LIB
;*		Cog_CalculerDateFinFacturation

;*
;*
;*

;
Include	"gttcz00.dhsp"						;déclarations communes
Include	"COGTC_MOTEURPRJSPEC.DHSP"

;
Module	"COGTM_000.DHOP"

;
Public 	RecordSQL	"COGRS_UTTAB.DHOQ"		CogRs_UT125			CogRs_UT125_RESA

;
Public 	Record		"GTFDD.DHSD"				ART
Public 	Record		"GTFDD.DHSD"				T020
Public 	Record		"GTFDD.DHSD"				T036


;*
;*	 Réservations
;*	

;*
Public Function int Cog_MoteurFacturationPrjSpe_RES()
; Réservation pour action sur les tables du moteur de facturation spécifique
; 0  --> OK
1		wCpt		3,0	= 0
1		wRetResa	1,0	= 1
BeginF

	CogRs_UT125_RESA.Init()

	Do While wRetResa <> 0 AND wCpt < 100

		If CogRs_UT125_RESA.FShare([MZ.Dos 'COG_UT125_FACTURATION'], 'R') = 0
	  		wRetResa = 0
		EndIf
		wCpt++ 

	WEnd

	FReturn(wRetResa)

EndF

;*
Public Function int Cog_MoteurFacturationPrjSpe_LIB()
; Réservation pour action sur les tables du moteur de facturation spécifique
; 0  --> OK
BeginF

	FReturn(CogRs_UT125_RESA.FShare([MZ.Dos 'COG_UT125_FACTURATION'], 'L'))

EndF

;*
;*	  Traitements communs
;*

;*
Public Function int Cog_CalculerDateFinFacturation(wDatD, wNbLoyer, wPeriod, &wDatF)
; Calcul de la date de fin de facturation en fonction des 3 premiers paramètres
; 0 --> Absence d'un paramètre, calcul non effectué
; 1 --> wDatF est renseigné
1		wDatD		 D
1		wDatF		 D
1		wNbLoyer	 >cogfdd.dhsd		Cog_LoyNb
1		wPeriod	 >cogfdd.dhsd		Cog_Period	; 1;Mensuel 2:Bimestriel 3:Trimestriel 4:Semestriel 5:Annuel
1		wNbMois	 6,0

BeginF

	;
	wDatF = ' '
	If wDatD = ' ' OR wNbLoyer	<= 0 OR wPeriod not in (1..5)
		FReturn(0)
	EndIf

	;
	Switch2 wPeriod
		Case 1
		 	wNbMois = wNbLoyer 
		Case 2
			wNbMois = wNbLoyer * 2
		Case 3
			wNbMois = wNbLoyer * 3
		Case 4
		 	wNbMois = wNbLoyer * 6
		Case 5
			wNbMois = wNbLoyer * 12
	EndSwitch

	wDatF = HDate(wDatD, -1, wNbMois)
	If wDatF < wDatD
		wDatF = '99991231'
	EndIf

	FReturn(1)

EndF

;*
Public Function int Cog_Affaire_Facturable(wAff)
; TRUE --> conditions remplies
RecordSQL	"GTRSPPPROJ.DHOQ"	Affaire		wRs_Aff
1		wAff		>gtfdd.dhsd		Affaire
BeginF

	wRs_Aff.Init()
	wRs_Aff.Where.RemoveCondition("")
	wRs_Aff.Where.PK(wAff)

	If wRs_Aff.Select() > 0

		; 1ere condition: émission de facture OUI
		If wRs_Aff.Cog_Facture <> 2
			FReturn(FALSE)
		EndIF

		; 2: Indicateur de fcturation sur statut démarré
		If wRs_Aff.Cog_Prj_Status <> C_STATUT_PRJ_AFACTURER
			FReturn(FALSE)
		EndIf

		; 3: code tiers renseigné
		If wRs_Aff.Tiers = ' '
			FReturn(FALSE)
		EndIf

		; 4: TODO date en fonction de nature article
		MessageBox("CONTROLE 4","TODO")

	EndIf

	FReturn(TRUE)

EndF

;*
Public Function int Cog_UT125_FacturationDebutee(wAff)
; TRUE --> au moins 1 facture
RecordSQL "COGRS_UTTAB.dhoq" 		CogRs_UT125			wRS_125
1		wAff		>gtfdd.dhsd		Affaire
BeginF

	wRS_125.Init()
	wRS_125.Where.RemoveCondition("")
	wRS_125.Where.Equal_Affaire(wAff)
	wRS_125.Where.AddCondition("Equal_Affaire")
	wRS_125.Where.Facture()
	wRS_125.Where.AddCondition("Facture")

	If wRS_125.GetCount() > 0
		FReturn(TRUE)
	EndIf

	FReturn(FALSE)

EndF

;*
;*	  Actions sur UT126
;*

;*
Public Procedure Cog_UT126_DeleteEcheancier(wUT125)
;	La RESA sur COG_UT125 doit être gérée avant appel à cette procédure
;  Suppression de l'échéancier COG_UT126 s'il existe 
RecordSQL	"COGRS_UTTAB.DHOQ"	CogRs_UT126		wRs_UT126
Record		"COGFDD.DHSD"			COG_UT125		wUT125
BeginP

	; Filtres
	IF wUT125.Affaire = ' ' OR wUT125.Ref = ' ' OR wUT125.Cog_LgNo = 0
		Cog_EcritureLivreDeBord("Informations UT125 incomplètes - génération échéancier facturation non effectuée.")
		PReturn
	EndIf

	; Suppression échéancier existant
	wRs_UT126.Init()
	wRs_UT126.Where.RemoveCondition("")
	wRs_UT126.Where.Equal_Affaire(wUT125.Affaire)
	wRs_UT126.Where.AddCondition("Equal_Affaire")
	wRs_UT126.Where.Equal_Ref(wUT125.Ref)
	wRs_UT126.Where.AddCondition("Equal_Ref")
	wRs_UT126.Where.Equal_LgNo(wUT125.Cog_LgNo)
	wRs_UT126.Where.AddCondition("Equal_LgNo")
	wRs_UT126.DeleteWhere()


EndP

;*
Public Function int Cog_UT126_ActivationLignes(wAff, wAction, wMsg)
; Lecture des UT126 associés à wAff
; Modification du Ce1 en fonction de wAction
; Action = 1 --> passage du Ce1 de 6 à 1 (Activation)
; Action = 2 --> passage du Ce1 de 1 à 6 (Désactivation)
; 0 --> OK
RecordSQL	"COGRS_UTTAB.DHOQ"	CogRs_UT125		wRs_UT125
RecordSQL	"COGRS_UTTAB.DHOQ"	CogRs_UT126		wRs_UT126
1		wAff		>gtfdd.dhsd		Affaire
1		wAction	1,0		
1		wMsg		1,0			= 	TRUE
1		wRet		1,0			=  0
1		wRead125	L
1		wRead126 L
1		wCe1Ori	1
1		wCe1Dst	1
BeginF

	If wAction not in (1,2)
		FReturn(1)
	EndIf
	wCe1Ori = Condition(wAction=1, '6', '1') 
	wCe1Dst = Condition(wAction=1, '1', '6') 

	If Cog_MoteurFacturationPrjSpe_RES <> 0
		If wMsg
			MessageBox("Le moteur de facturation est réservé, modification des échéanciers impossibles.","Alerte", MB_ICONINFORMATION)
		EndIf
		FReturn(1)
	EndIF

	; resa des UT125 avant maj des UT126
	wRs_UT125.Init()
	wRs_UT125.Where.RemoveCondition("")
	wRead125 = wRs_UT125.ReaderOpen()
	wRs_UT125.Where.Equal_Affaire(wAff)
	wRs_UT125.OrderBy.Ordre_PK()
	wRs_UT125.ReaderSelect(wRead125)
	Do While wRs_UT125.ReaderNext(wRead125) > 0 AND wRet = 0
		If wRs_UT125.FShare(['COG_UT125' mz.Dos wRs_UT125.Affaire wRs_UT125.Ref wRs_UT125.Cog_LgNo], 'R') <> 0
			wRet = 1
		EndIf
	WEnd

	; Activation ou désactivation UT126
	If wRet = 0
		wRs_UT126.Init()
		wRs_UT126.Where.RemoveCondition("")
		wRead126 = wRs_UT126.ReaderOpen()
		wRs_UT126.Where.Equal_Affaire(wAff)
		wRs_UT126.Where.AddCondition("Equal_Affaire")
		wRs_UT126.Where.Equal_Etat(wCe1Ori)
		wRs_UT126.Where.AddCondition("Equal_Etat")
		wRs_UT126.ReaderSelect(wRead126)
		Do While wRs_UT126.ReaderNext(wRead126) > 0 
		
			wRs_UT126.Ce1 = wCe1Dst
			wRs_UT126.ReaderUpdate(wRead126)

		WEnd

		wRs_UT126.ReaderClose(wRead126)

	Else
		If wMsg
			MessageBox("Un ou plusieurs enregistrements UT125 sont réservés, modification des échéanciers impossible.","Alerte", MB_ICONINFORMATION)
		EndIf
	EndIf

	; Libération des resa
	wRs_UT125.ReaderBegin(wRead125)
	Do While wRs_UT125.ReaderNext(wRead125) > 0 
		wRs_UT125.FShare(['COG_UT125' mz.Dos wRs_UT125.Affaire wRs_UT125.Ref wRs_UT125.Cog_LgNo], 'L') 
	WEnd
	wRs_UT125.ReaderClose(wRead125)

	Cog_MoteurFacturationPrjSpe_LIB

	FReturn(wRet)

EndF

;*
Public Procedure Cog_UT126_GenererEcheancier(wUT125)
;	La RESA sur COG_UT125 doit être gérée avant appel à cette procédure
;  Suppression de l'échéancier COG_UT126 s'il existe puis régénération
RecordSQL	"COGRS_UTTAB.DHOQ"	CogRs_UT126			wRs_UT126
RecordSQL	"COGRS_TAB.DHOQ"		CogRs_TauxFi		wRs_TauxFi
RecordSQL	"COGRS_TAB.DHOQ"		CogRs_TauxStruc	wRs_TauxSt
Record		"COGFDD.DHSD"			COG_UT125			wUT125
1		wLoyerMt		13,D0			; montant loyer
1		wLoyerMMt	13,D0			; montant loyer mensuel
1		wSolde		13,D0		
1		wFaDDt		D				; date de première facture
1		wFaFDt		D
1		wPrevFaDt	D				; date facture précédente
1		wAnD			4,0			; année première facture
1		wAnF			4,0			; année dernière facture
1		i				4,0
1		j				2,0
1		wNextFaMois 2,0			; prochain mois de facturation
1		wStepMois	2,0
1		wFacturable	1,0

BeginP

	; Filtres
	IF wUT125.Affaire = ' ' OR wUT125.Ref = ' ' OR wUT125.Cog_LgNo = 0
		Cog_EcritureLivreDeBord("Informations UT125 incomplètes - génération échéancier facturation non effectuée.")
		PReturn
	EndIf

	; Suppression échéancier existant
	Cog_UT126_DeleteEcheancier(wUT125)

	;*
	; Nouveau calcul
	;*
	wFacturable = Cog_Affaire_Facturable(wUT125.Affaire)
	wFaDDt = Condition(Hday(wUT125.Cog_Date_Debut) = 1,  wUT125.Cog_Date_Debut, HDate(wUT125.Cog_Date_Debut, 'p', +1))
	Cog_CalculerDateFinFacturation(wFaDDt, wUT125.Cog_LoyNb, wUT125.Cog_Period, wFaFDt)
	wAnD = HYear(wFaDDt)
	wAnF = HYear(wUT125.Cog_Date_Fin)

	; chargement tables comp --> les tests d'existence sont réalisés à la saisie
	If ART.Ref <> wUT125.Ref
		Seek_ART(wUT125.Ref)
	EndIf
	If T020.Op <> wUT125.Op
		Lectab(20, wUT125.Op)
	EndIf
	If T036.ProdNat <> ART.ProdNat  
		Lectab(36, ART.ProdNat)
	EndIf

	Switch2 wUT125.Cog_Period
		Case 1
		 	wStepMois = 1 
		Case 2
			wStepMois = 2
		Case 3
			wStepMois = 3
		Case 4
		 	wStepMois = 6
		Case 5
			wStepMois = 12
		Default
			wStepMois = 1
	EndSwitch

	wLoyerMt = Condition(wUT125.Cog_LoyNb > 0, wUT125.Cog_Montant / wUT125.Cog_LoyNb, 0)
	wLoyerMMt= wLoyerMt / wStepMois
	wSolde	= wUT125.Cog_Montant
	wNextFaMois = HMonth(wFaDDt)

	; dotations annuelles
	For i = wAnD to wAnF

		wRs_UT126.Init()
		wRs_UT126.Dos		= wUT125.Dos
		wRs_UT126.Annee 	= i
		wRs_UT126.Affaire	= wUT125.Affaire
		wRs_UT126.Ref		= wUT125.Ref
		wRs_UT126.Cog_LgNo= wUT125.Cog_LgNo
		wRs_UT126.DDt		= Condition(i&"0101" >= wFaDDt, i&"0101", wFaDDt)
		wRs_UT126.FDt		= Condition(i&"1231" <= wFaFDt, i&"1231", wFaFDt)
		wRs_UT126.Cog_BaseMt = wSolde
		wRs_UT126.AntMt	= wUT125.Cog_Montant - wSolde
		wRs_UT126.UserCr  = System.User
		wRs_UT126.UserCrDh= Time(7)

		; dotations mensuelles et cumuls
		For j = wNextFaMois to 12 step wStepMois

			wRs_UT126.MoisMt(j) = Condition(wSolde <> 0,  wLoyerMt, 0)
			wSolde = Condition(wSolde <> 0, wSolde - wLoyerMt, 0)
			wPrevFaDt = wAnD & j & '01'
			
			; dernière échéance
			If i = wAnF AND j = Hmonth(wFaFDt) AND wSolde <> 0
				wRs_UT126.MoisMt(j) += wSolde
				wSolde = 0
			EndIf
			
			; cumul dotations	annuelles
			wRs_UT126.AnMt += wRs_UT126.MoisMt(j)

			; Frais financiers de construction ou frais de structure
			wRs_UT126.FraisMoisMt(j) = 0
			Switch T020.Cog_MotPrjFlux & T036.Cog_MotFacTyp
				Case C_OP_IMMO & C_PRODNAT_PROJET  	; Frais financiers
					wRs_TauxFi.Init()
					wRs_TauxFi.Where.En_Vigueur(wUT125.Cog_Date_Debut)
					If wRs_TauxFi.Select() > 0
						wRs_UT126.FraisMoisMt(j) = (wRs_UT126.MoisMt(j)/2) * (wRs_TauxFi.Cog_Taux / 100)	* wUT125.Cog_LoyNb
					EndIf

				Case C_OP_IMMO & C_PRODNAT_INFRA		; Frais de structure
					wRs_TauxSt.Init()
					wRs_TauxSt.Where.En_Vigueur(wPrevFaDt)
					If wRs_TauxSt.Select() > 0
						wRs_UT126.FraisMoisMt(j) = wRs_TauxSt.Cog_Taux * (wRs_UT126.MoisMt(j) / 100)
					EndIf


			EndSwitch

		Next

		; init des ce
		wRs_UT126.Ce1 = '8'	 ; par défaut périmé
		For j = 1 to 12

			wRs_UT126.CeFaTb(j) = '9' ; par défaut non concerné par la facturation
			If wRs_UT126.MoisMt(j) > 0

				wRs_UT126.Ce1 = Condition(wFacturable=TRUE, '1', '6') ; au moins un loyer facturable --> ut126 est actif ou en attente que les conditions de facturation soient remplies
				wRs_UT126.CeFaTb(j) = '1'										; mois à facturer

			EndIf

		Next

		wRs_UT126.Insert()

		wNextFaMois	= HMonth(Hdate(wPrevFaDt, '', wStepMois))

	Next

EndP

